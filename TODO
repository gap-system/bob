> Define BOB_statusses
> Use for GAP component
> Sorted lookup for Tests.
> Use for IO component
> Same setup for Components.
> Setup autoconf/automake
> Implement getopt and structure using getopt
> setup environment infrastructure
> Design logging infrastructure
> Develop skeleton
> Implement BOB::which
> Implement test for C compiler
> Implement BOB::get using libcurl
> Implement BOB::getindirectly without checksumming
> Implement BOB::sh
> Implement BOB::untar using libarchive and zlib
> Implement -v echoing of building stuff
> Implement -static
> Implement test for architecture
> Implement 64bit/32bit distinction
> Implement more packages
> Implement checksumming using libssl
> Implement BOB::getindirectly with checksummming using libssl
> Test on OSX
> Automatic downloading of libraries as dependencies?
> Sort out local usage of libs
> Sort out download/get/getind/downloadname
> Test for bash?
> test for updates/version number
> Recognition for 64-bit/32-bit
> Actually implement proper GAP compiling --> Need to do packages 64/32
> Say which archive we got.
> Put entry into build.log as to what component is being done
> Write a help page as manual
> Add gmp again
> Allow for 32-bit compile of bzip2-lib, we need to patch it
> Create download dir for BOBVERSION
> Output a final report about what worked and what not
> Compile packages which need sysinfo.gap link changed
> Copy startup scripts to targetdir
> Add make workspace: need better sh?
Check for 32-bit-compilation working on 64-bit
Add more packages
anupq: need to distinguish OS, existence of gmp and have to use 32-bit
Gauss: needs fixing
carat: whatever
nq: needs fixing
pargap???
xgap???
Check failure in Browse package --> need to detect???
Check for readline-dev for Browse
In general: How to check for libraries and dev files???
Test old bob on minimal 64-bit machine
Install old debian64 to compile a 64-bit old bob
Create web page
test in chroot prison?



Future:

exclude some components   -x
selfupdate
Implement test for C++ compiler
More tests?
